// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Harbor
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Harbor = Pulumiverse.Harbor;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var main = new Harbor.InterrogationServices("main", new()
    ///     {
    ///         VulnerabilityScanPolicy = "daily",
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [HarborResourceType("harbor:index/interrogationServices:InterrogationServices")]
    public partial class InterrogationServices : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Sets the default interrogation service **Clair**
        /// </summary>
        [Output("defaultScanner")]
        public Output<string?> DefaultScanner { get; private set; } = null!;

        /// <summary>
        /// The frequency of the vulnerability scanning is done. This can be `daily`, `weekly`, `monthly` or can be a custom cron string.
        /// </summary>
        [Output("vulnerabilityScanPolicy")]
        public Output<string> VulnerabilityScanPolicy { get; private set; } = null!;


        /// <summary>
        /// Create a InterrogationServices resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public InterrogationServices(string name, InterrogationServicesArgs args, CustomResourceOptions? options = null)
            : base("harbor:index/interrogationServices:InterrogationServices", name, args ?? new InterrogationServicesArgs(), MakeResourceOptions(options, ""))
        {
        }

        private InterrogationServices(string name, Input<string> id, InterrogationServicesState? state = null, CustomResourceOptions? options = null)
            : base("harbor:index/interrogationServices:InterrogationServices", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse/pulumi-harbor",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing InterrogationServices resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static InterrogationServices Get(string name, Input<string> id, InterrogationServicesState? state = null, CustomResourceOptions? options = null)
        {
            return new InterrogationServices(name, id, state, options);
        }
    }

    public sealed class InterrogationServicesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Sets the default interrogation service **Clair**
        /// </summary>
        [Input("defaultScanner")]
        public Input<string>? DefaultScanner { get; set; }

        /// <summary>
        /// The frequency of the vulnerability scanning is done. This can be `daily`, `weekly`, `monthly` or can be a custom cron string.
        /// </summary>
        [Input("vulnerabilityScanPolicy", required: true)]
        public Input<string> VulnerabilityScanPolicy { get; set; } = null!;

        public InterrogationServicesArgs()
        {
        }
        public static new InterrogationServicesArgs Empty => new InterrogationServicesArgs();
    }

    public sealed class InterrogationServicesState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Sets the default interrogation service **Clair**
        /// </summary>
        [Input("defaultScanner")]
        public Input<string>? DefaultScanner { get; set; }

        /// <summary>
        /// The frequency of the vulnerability scanning is done. This can be `daily`, `weekly`, `monthly` or can be a custom cron string.
        /// </summary>
        [Input("vulnerabilityScanPolicy")]
        public Input<string>? VulnerabilityScanPolicy { get; set; }

        public InterrogationServicesState()
        {
        }
        public static new InterrogationServicesState Empty => new InterrogationServicesState();
    }
}
