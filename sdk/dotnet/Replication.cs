// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Harbor
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Harbor = Pulumiverse.Harbor;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var main = new Harbor.Registry("main", new()
    ///     {
    ///         ProviderName = "docker-hub",
    ///         EndpointUrl = "https://hub.docker.com",
    ///     });
    /// 
    ///     var push = new Harbor.Replication("push", new()
    ///     {
    ///         Action = "push",
    ///         RegistryId = main.RegistryId,
    ///     });
    /// 
    ///     var alpineReplication = new Harbor.Replication("alpineReplication", new()
    ///     {
    ///         Action = "pull",
    ///         RegistryId = main.RegistryId,
    ///         Schedule = "0 0/15 * * * *",
    ///         Filters = new[]
    ///         {
    ///             new Harbor.Inputs.ReplicationFilterArgs
    ///             {
    ///                 Name = "library/alpine",
    ///             },
    ///             new Harbor.Inputs.ReplicationFilterArgs
    ///             {
    ///                 Tag = "3.*.*",
    ///             },
    ///             new Harbor.Inputs.ReplicationFilterArgs
    ///             {
    ///                 Resource = "artifact",
    ///             },
    ///             new Harbor.Inputs.ReplicationFilterArgs
    ///             {
    ///                 Labels = new[]
    ///                 {
    ///                     "qa",
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    ///     var alpineIndex_replicationReplication = new Harbor.Replication("alpineIndex/replicationReplication", new()
    ///     {
    ///         Action = "pull",
    ///         RegistryId = main.RegistryId,
    ///         Schedule = "event_based",
    ///         Filters = new[]
    ///         {
    ///             new Harbor.Inputs.ReplicationFilterArgs
    ///             {
    ///                 Name = "library/alpine",
    ///             },
    ///             new Harbor.Inputs.ReplicationFilterArgs
    ///             {
    ///                 Tag = "3.*.*",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Harbor project can be imported using the `replication id` eg, `
    /// 
    /// ```sh
    ///  $ pulumi import harbor:index/replication:Replication main /replication/policies/1
    /// ```
    /// 
    ///  `
    /// </summary>
    [HarborResourceType("harbor:index/replication:Replication")]
    public partial class Replication : global::Pulumi.CustomResource
    {
        [Output("action")]
        public Output<string> Action { get; private set; } = null!;

        [Output("deletion")]
        public Output<bool?> Deletion { get; private set; } = null!;

        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("destNamespace")]
        public Output<string?> DestNamespace { get; private set; } = null!;

        [Output("destNamespaceReplace")]
        public Output<int?> DestNamespaceReplace { get; private set; } = null!;

        [Output("enabled")]
        public Output<bool?> Enabled { get; private set; } = null!;

        [Output("filters")]
        public Output<ImmutableArray<Outputs.ReplicationFilter>> Filters { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("override")]
        public Output<bool?> Override { get; private set; } = null!;

        [Output("registryId")]
        public Output<int> RegistryId { get; private set; } = null!;

        [Output("replicationPolicyId")]
        public Output<int> ReplicationPolicyId { get; private set; } = null!;

        [Output("schedule")]
        public Output<string?> Schedule { get; private set; } = null!;

        [Output("speed")]
        public Output<int?> Speed { get; private set; } = null!;


        /// <summary>
        /// Create a Replication resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Replication(string name, ReplicationArgs args, CustomResourceOptions? options = null)
            : base("harbor:index/replication:Replication", name, args ?? new ReplicationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Replication(string name, Input<string> id, ReplicationState? state = null, CustomResourceOptions? options = null)
            : base("harbor:index/replication:Replication", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse/pulumi-harbor",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Replication resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Replication Get(string name, Input<string> id, ReplicationState? state = null, CustomResourceOptions? options = null)
        {
            return new Replication(name, id, state, options);
        }
    }

    public sealed class ReplicationArgs : global::Pulumi.ResourceArgs
    {
        [Input("action", required: true)]
        public Input<string> Action { get; set; } = null!;

        [Input("deletion")]
        public Input<bool>? Deletion { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("destNamespace")]
        public Input<string>? DestNamespace { get; set; }

        [Input("destNamespaceReplace")]
        public Input<int>? DestNamespaceReplace { get; set; }

        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        [Input("filters")]
        private InputList<Inputs.ReplicationFilterArgs>? _filters;
        public InputList<Inputs.ReplicationFilterArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.ReplicationFilterArgs>());
            set => _filters = value;
        }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("override")]
        public Input<bool>? Override { get; set; }

        [Input("registryId", required: true)]
        public Input<int> RegistryId { get; set; } = null!;

        [Input("schedule")]
        public Input<string>? Schedule { get; set; }

        [Input("speed")]
        public Input<int>? Speed { get; set; }

        public ReplicationArgs()
        {
        }
        public static new ReplicationArgs Empty => new ReplicationArgs();
    }

    public sealed class ReplicationState : global::Pulumi.ResourceArgs
    {
        [Input("action")]
        public Input<string>? Action { get; set; }

        [Input("deletion")]
        public Input<bool>? Deletion { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("destNamespace")]
        public Input<string>? DestNamespace { get; set; }

        [Input("destNamespaceReplace")]
        public Input<int>? DestNamespaceReplace { get; set; }

        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        [Input("filters")]
        private InputList<Inputs.ReplicationFilterGetArgs>? _filters;
        public InputList<Inputs.ReplicationFilterGetArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.ReplicationFilterGetArgs>());
            set => _filters = value;
        }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("override")]
        public Input<bool>? Override { get; set; }

        [Input("registryId")]
        public Input<int>? RegistryId { get; set; }

        [Input("replicationPolicyId")]
        public Input<int>? ReplicationPolicyId { get; set; }

        [Input("schedule")]
        public Input<string>? Schedule { get; set; }

        [Input("speed")]
        public Input<int>? Speed { get; set; }

        public ReplicationState()
        {
        }
        public static new ReplicationState Empty => new ReplicationState();
    }
}
