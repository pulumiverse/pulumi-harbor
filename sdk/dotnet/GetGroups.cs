// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Harbor
{
    public static class GetGroups
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```terraform
        /// data "harbor_groups" "example" {
        ///   group_name = "example-group"
        /// }
        /// 
        /// output "group_ids" {
        ///   value = [data.harbor_groups.example.*.id]
        /// }
        /// ```
        /// </summary>
        public static Task<GetGroupsResult> InvokeAsync(GetGroupsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetGroupsResult>("harbor:index/getGroups:getGroups", args ?? new GetGroupsArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```terraform
        /// data "harbor_groups" "example" {
        ///   group_name = "example-group"
        /// }
        /// 
        /// output "group_ids" {
        ///   value = [data.harbor_groups.example.*.id]
        /// }
        /// ```
        /// </summary>
        public static Output<GetGroupsResult> Invoke(GetGroupsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetGroupsResult>("harbor:index/getGroups:getGroups", args ?? new GetGroupsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```terraform
        /// data "harbor_groups" "example" {
        ///   group_name = "example-group"
        /// }
        /// 
        /// output "group_ids" {
        ///   value = [data.harbor_groups.example.*.id]
        /// }
        /// ```
        /// </summary>
        public static Output<GetGroupsResult> Invoke(GetGroupsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetGroupsResult>("harbor:index/getGroups:getGroups", args ?? new GetGroupsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetGroupsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the group to filter by.
        /// </summary>
        [Input("groupName")]
        public string? GroupName { get; set; }

        /// <summary>
        /// The LDAP group DN to filter by.
        /// </summary>
        [Input("ldapGroupDn")]
        public string? LdapGroupDn { get; set; }

        public GetGroupsArgs()
        {
        }
        public static new GetGroupsArgs Empty => new GetGroupsArgs();
    }

    public sealed class GetGroupsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the group to filter by.
        /// </summary>
        [Input("groupName")]
        public Input<string>? GroupName { get; set; }

        /// <summary>
        /// The LDAP group DN to filter by.
        /// </summary>
        [Input("ldapGroupDn")]
        public Input<string>? LdapGroupDn { get; set; }

        public GetGroupsInvokeArgs()
        {
        }
        public static new GetGroupsInvokeArgs Empty => new GetGroupsInvokeArgs();
    }


    [OutputType]
    public sealed class GetGroupsResult
    {
        /// <summary>
        /// The name of the group to filter by.
        /// </summary>
        public readonly string? GroupName;
        public readonly ImmutableArray<Outputs.GetGroupsGroupResult> Groups;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The LDAP group DN to filter by.
        /// </summary>
        public readonly string? LdapGroupDn;

        [OutputConstructor]
        private GetGroupsResult(
            string? groupName,

            ImmutableArray<Outputs.GetGroupsGroupResult> groups,

            string id,

            string? ldapGroupDn)
        {
            GroupName = groupName;
            Groups = groups;
            Id = id;
            LdapGroupDn = ldapGroupDn;
        }
    }
}
