// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Harbor.Outputs
{

    [OutputType]
    public sealed class RetentionPolicyRule
    {
        public readonly bool? AlwaysRetain;
        public readonly bool? Disabled;
        public readonly int? MostRecentlyPulled;
        public readonly int? MostRecentlyPushed;
        public readonly int? NDaysSinceLastPull;
        public readonly int? NDaysSinceLastPush;
        public readonly string? RepoExcluding;
        public readonly string? RepoMatching;
        public readonly string? TagExcluding;
        public readonly string? TagMatching;
        public readonly bool? UntaggedArtifacts;

        [OutputConstructor]
        private RetentionPolicyRule(
            bool? alwaysRetain,

            bool? disabled,

            int? mostRecentlyPulled,

            int? mostRecentlyPushed,

            int? nDaysSinceLastPull,

            int? nDaysSinceLastPush,

            string? repoExcluding,

            string? repoMatching,

            string? tagExcluding,

            string? tagMatching,

            bool? untaggedArtifacts)
        {
            AlwaysRetain = alwaysRetain;
            Disabled = disabled;
            MostRecentlyPulled = mostRecentlyPulled;
            MostRecentlyPushed = mostRecentlyPushed;
            NDaysSinceLastPull = nDaysSinceLastPull;
            NDaysSinceLastPush = nDaysSinceLastPush;
            RepoExcluding = repoExcluding;
            RepoMatching = repoMatching;
            TagExcluding = tagExcluding;
            TagMatching = tagMatching;
            UntaggedArtifacts = untaggedArtifacts;
        }
    }
}
