// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package harbor

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-harbor/sdk/v3/go/harbor/internal"
)

// ## Example Usage
func GetProjectMemberGroups(ctx *pulumi.Context, args *GetProjectMemberGroupsArgs, opts ...pulumi.InvokeOption) (*GetProjectMemberGroupsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetProjectMemberGroupsResult
	err := ctx.Invoke("harbor:index/getProjectMemberGroups:getProjectMemberGroups", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getProjectMemberGroups.
type GetProjectMemberGroupsArgs struct {
	// The id of the project within harbor.
	ProjectId string `pulumi:"projectId"`
}

// A collection of values returned by getProjectMemberGroups.
type GetProjectMemberGroupsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The id of the project within harbor.
	ProjectId           string                                     `pulumi:"projectId"`
	ProjectMemberGroups []GetProjectMemberGroupsProjectMemberGroup `pulumi:"projectMemberGroups"`
}

func GetProjectMemberGroupsOutput(ctx *pulumi.Context, args GetProjectMemberGroupsOutputArgs, opts ...pulumi.InvokeOption) GetProjectMemberGroupsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetProjectMemberGroupsResultOutput, error) {
			args := v.(GetProjectMemberGroupsArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv GetProjectMemberGroupsResult
			secret, err := ctx.InvokePackageRaw("harbor:index/getProjectMemberGroups:getProjectMemberGroups", args, &rv, "", opts...)
			if err != nil {
				return GetProjectMemberGroupsResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(GetProjectMemberGroupsResultOutput)
			if secret {
				return pulumi.ToSecret(output).(GetProjectMemberGroupsResultOutput), nil
			}
			return output, nil
		}).(GetProjectMemberGroupsResultOutput)
}

// A collection of arguments for invoking getProjectMemberGroups.
type GetProjectMemberGroupsOutputArgs struct {
	// The id of the project within harbor.
	ProjectId pulumi.StringInput `pulumi:"projectId"`
}

func (GetProjectMemberGroupsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectMemberGroupsArgs)(nil)).Elem()
}

// A collection of values returned by getProjectMemberGroups.
type GetProjectMemberGroupsResultOutput struct{ *pulumi.OutputState }

func (GetProjectMemberGroupsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectMemberGroupsResult)(nil)).Elem()
}

func (o GetProjectMemberGroupsResultOutput) ToGetProjectMemberGroupsResultOutput() GetProjectMemberGroupsResultOutput {
	return o
}

func (o GetProjectMemberGroupsResultOutput) ToGetProjectMemberGroupsResultOutputWithContext(ctx context.Context) GetProjectMemberGroupsResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetProjectMemberGroupsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectMemberGroupsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The id of the project within harbor.
func (o GetProjectMemberGroupsResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectMemberGroupsResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

func (o GetProjectMemberGroupsResultOutput) ProjectMemberGroups() GetProjectMemberGroupsProjectMemberGroupArrayOutput {
	return o.ApplyT(func(v GetProjectMemberGroupsResult) []GetProjectMemberGroupsProjectMemberGroup {
		return v.ProjectMemberGroups
	}).(GetProjectMemberGroupsProjectMemberGroupArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetProjectMemberGroupsResultOutput{})
}
