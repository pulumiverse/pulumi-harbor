// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package harbor

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-harbor/sdk/v3/go/harbor/internal"
)

// ## Example Usage
//
// ## Import
//
// ```sh
// $ pulumi import harbor:index/replication:Replication main /replication/policies/1
// ```
type Replication struct {
	pulumi.CustomResourceState

	Action pulumi.StringOutput `pulumi:"action"`
	// Specify whether to enable the artifact blobs copied by chunks. (Default: `false`)
	CopyByChunk pulumi.BoolPtrOutput `pulumi:"copyByChunk"`
	// Specify whether to delete the remote resources when locally deleted. (Default: `false`)
	Deletion pulumi.BoolPtrOutput `pulumi:"deletion"`
	// Description of the replication policy.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Specify the destination namespace. if empty, the resource will be put under the same namespace as the source.
	DestNamespace pulumi.StringPtrOutput `pulumi:"destNamespace"`
	// Specify the destination namespace flattening policy. Integers from `-1` to `3` are valid values in the harbor API. A value of `-1` will 'Flatten All Levels', `0` means 'No Flattening', `1` 'Flatten 1 Level', `2` 'Flatten 2 Levels', `3` 'Flatten 3 Levels' (Default: `-1`, see [Replication Rules](https://goharbor.io/docs/latest/administration/configuring-replication/create-replication-rules/) for more details)
	DestNamespaceReplace pulumi.IntPtrOutput `pulumi:"destNamespaceReplace"`
	// Specify whether the replication is enabled. (Default: `true`)
	Enabled pulumi.BoolPtrOutput `pulumi:"enabled"`
	// Specify whether to execute the replication rule if new or modified. (Default: `false`)
	ExecuteOnChanged pulumi.BoolPtrOutput         `pulumi:"executeOnChanged"`
	Filters          ReplicationFilterArrayOutput `pulumi:"filters"`
	// The name of the replication.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specify whether to override the resources at the destination if a resources with the same name exist. (Default: `true`)
	Override pulumi.BoolPtrOutput `pulumi:"override"`
	// The registry ID of the Registry Endpoint.
	RegistryId          pulumi.IntOutput `pulumi:"registryId"`
	ReplicationPolicyId pulumi.IntOutput `pulumi:"replicationPolicyId"`
	// The scheduled time of when the container register will be push / pull. In cron base format. Hourly `"0 0 * * * *"`, Daily `"0 0 0 * * *"`, Monthly `"0 0 0 * * 0"`. Can be one of the following: `eventBased`, `manual`, `cron format` (Default: `manual`)
	Schedule pulumi.StringPtrOutput `pulumi:"schedule"`
	// The Maximum network bandwidth in Kbps for each execution. Default is `-1` (unlimited).
	Speed pulumi.IntPtrOutput `pulumi:"speed"`
}

// NewReplication registers a new resource with the given unique name, arguments, and options.
func NewReplication(ctx *pulumi.Context,
	name string, args *ReplicationArgs, opts ...pulumi.ResourceOption) (*Replication, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Action == nil {
		return nil, errors.New("invalid value for required argument 'Action'")
	}
	if args.RegistryId == nil {
		return nil, errors.New("invalid value for required argument 'RegistryId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Replication
	err := ctx.RegisterResource("harbor:index/replication:Replication", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetReplication gets an existing Replication resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetReplication(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ReplicationState, opts ...pulumi.ResourceOption) (*Replication, error) {
	var resource Replication
	err := ctx.ReadResource("harbor:index/replication:Replication", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Replication resources.
type replicationState struct {
	Action *string `pulumi:"action"`
	// Specify whether to enable the artifact blobs copied by chunks. (Default: `false`)
	CopyByChunk *bool `pulumi:"copyByChunk"`
	// Specify whether to delete the remote resources when locally deleted. (Default: `false`)
	Deletion *bool `pulumi:"deletion"`
	// Description of the replication policy.
	Description *string `pulumi:"description"`
	// Specify the destination namespace. if empty, the resource will be put under the same namespace as the source.
	DestNamespace *string `pulumi:"destNamespace"`
	// Specify the destination namespace flattening policy. Integers from `-1` to `3` are valid values in the harbor API. A value of `-1` will 'Flatten All Levels', `0` means 'No Flattening', `1` 'Flatten 1 Level', `2` 'Flatten 2 Levels', `3` 'Flatten 3 Levels' (Default: `-1`, see [Replication Rules](https://goharbor.io/docs/latest/administration/configuring-replication/create-replication-rules/) for more details)
	DestNamespaceReplace *int `pulumi:"destNamespaceReplace"`
	// Specify whether the replication is enabled. (Default: `true`)
	Enabled *bool `pulumi:"enabled"`
	// Specify whether to execute the replication rule if new or modified. (Default: `false`)
	ExecuteOnChanged *bool               `pulumi:"executeOnChanged"`
	Filters          []ReplicationFilter `pulumi:"filters"`
	// The name of the replication.
	Name *string `pulumi:"name"`
	// Specify whether to override the resources at the destination if a resources with the same name exist. (Default: `true`)
	Override *bool `pulumi:"override"`
	// The registry ID of the Registry Endpoint.
	RegistryId          *int `pulumi:"registryId"`
	ReplicationPolicyId *int `pulumi:"replicationPolicyId"`
	// The scheduled time of when the container register will be push / pull. In cron base format. Hourly `"0 0 * * * *"`, Daily `"0 0 0 * * *"`, Monthly `"0 0 0 * * 0"`. Can be one of the following: `eventBased`, `manual`, `cron format` (Default: `manual`)
	Schedule *string `pulumi:"schedule"`
	// The Maximum network bandwidth in Kbps for each execution. Default is `-1` (unlimited).
	Speed *int `pulumi:"speed"`
}

type ReplicationState struct {
	Action pulumi.StringPtrInput
	// Specify whether to enable the artifact blobs copied by chunks. (Default: `false`)
	CopyByChunk pulumi.BoolPtrInput
	// Specify whether to delete the remote resources when locally deleted. (Default: `false`)
	Deletion pulumi.BoolPtrInput
	// Description of the replication policy.
	Description pulumi.StringPtrInput
	// Specify the destination namespace. if empty, the resource will be put under the same namespace as the source.
	DestNamespace pulumi.StringPtrInput
	// Specify the destination namespace flattening policy. Integers from `-1` to `3` are valid values in the harbor API. A value of `-1` will 'Flatten All Levels', `0` means 'No Flattening', `1` 'Flatten 1 Level', `2` 'Flatten 2 Levels', `3` 'Flatten 3 Levels' (Default: `-1`, see [Replication Rules](https://goharbor.io/docs/latest/administration/configuring-replication/create-replication-rules/) for more details)
	DestNamespaceReplace pulumi.IntPtrInput
	// Specify whether the replication is enabled. (Default: `true`)
	Enabled pulumi.BoolPtrInput
	// Specify whether to execute the replication rule if new or modified. (Default: `false`)
	ExecuteOnChanged pulumi.BoolPtrInput
	Filters          ReplicationFilterArrayInput
	// The name of the replication.
	Name pulumi.StringPtrInput
	// Specify whether to override the resources at the destination if a resources with the same name exist. (Default: `true`)
	Override pulumi.BoolPtrInput
	// The registry ID of the Registry Endpoint.
	RegistryId          pulumi.IntPtrInput
	ReplicationPolicyId pulumi.IntPtrInput
	// The scheduled time of when the container register will be push / pull. In cron base format. Hourly `"0 0 * * * *"`, Daily `"0 0 0 * * *"`, Monthly `"0 0 0 * * 0"`. Can be one of the following: `eventBased`, `manual`, `cron format` (Default: `manual`)
	Schedule pulumi.StringPtrInput
	// The Maximum network bandwidth in Kbps for each execution. Default is `-1` (unlimited).
	Speed pulumi.IntPtrInput
}

func (ReplicationState) ElementType() reflect.Type {
	return reflect.TypeOf((*replicationState)(nil)).Elem()
}

type replicationArgs struct {
	Action string `pulumi:"action"`
	// Specify whether to enable the artifact blobs copied by chunks. (Default: `false`)
	CopyByChunk *bool `pulumi:"copyByChunk"`
	// Specify whether to delete the remote resources when locally deleted. (Default: `false`)
	Deletion *bool `pulumi:"deletion"`
	// Description of the replication policy.
	Description *string `pulumi:"description"`
	// Specify the destination namespace. if empty, the resource will be put under the same namespace as the source.
	DestNamespace *string `pulumi:"destNamespace"`
	// Specify the destination namespace flattening policy. Integers from `-1` to `3` are valid values in the harbor API. A value of `-1` will 'Flatten All Levels', `0` means 'No Flattening', `1` 'Flatten 1 Level', `2` 'Flatten 2 Levels', `3` 'Flatten 3 Levels' (Default: `-1`, see [Replication Rules](https://goharbor.io/docs/latest/administration/configuring-replication/create-replication-rules/) for more details)
	DestNamespaceReplace *int `pulumi:"destNamespaceReplace"`
	// Specify whether the replication is enabled. (Default: `true`)
	Enabled *bool `pulumi:"enabled"`
	// Specify whether to execute the replication rule if new or modified. (Default: `false`)
	ExecuteOnChanged *bool               `pulumi:"executeOnChanged"`
	Filters          []ReplicationFilter `pulumi:"filters"`
	// The name of the replication.
	Name *string `pulumi:"name"`
	// Specify whether to override the resources at the destination if a resources with the same name exist. (Default: `true`)
	Override *bool `pulumi:"override"`
	// The registry ID of the Registry Endpoint.
	RegistryId int `pulumi:"registryId"`
	// The scheduled time of when the container register will be push / pull. In cron base format. Hourly `"0 0 * * * *"`, Daily `"0 0 0 * * *"`, Monthly `"0 0 0 * * 0"`. Can be one of the following: `eventBased`, `manual`, `cron format` (Default: `manual`)
	Schedule *string `pulumi:"schedule"`
	// The Maximum network bandwidth in Kbps for each execution. Default is `-1` (unlimited).
	Speed *int `pulumi:"speed"`
}

// The set of arguments for constructing a Replication resource.
type ReplicationArgs struct {
	Action pulumi.StringInput
	// Specify whether to enable the artifact blobs copied by chunks. (Default: `false`)
	CopyByChunk pulumi.BoolPtrInput
	// Specify whether to delete the remote resources when locally deleted. (Default: `false`)
	Deletion pulumi.BoolPtrInput
	// Description of the replication policy.
	Description pulumi.StringPtrInput
	// Specify the destination namespace. if empty, the resource will be put under the same namespace as the source.
	DestNamespace pulumi.StringPtrInput
	// Specify the destination namespace flattening policy. Integers from `-1` to `3` are valid values in the harbor API. A value of `-1` will 'Flatten All Levels', `0` means 'No Flattening', `1` 'Flatten 1 Level', `2` 'Flatten 2 Levels', `3` 'Flatten 3 Levels' (Default: `-1`, see [Replication Rules](https://goharbor.io/docs/latest/administration/configuring-replication/create-replication-rules/) for more details)
	DestNamespaceReplace pulumi.IntPtrInput
	// Specify whether the replication is enabled. (Default: `true`)
	Enabled pulumi.BoolPtrInput
	// Specify whether to execute the replication rule if new or modified. (Default: `false`)
	ExecuteOnChanged pulumi.BoolPtrInput
	Filters          ReplicationFilterArrayInput
	// The name of the replication.
	Name pulumi.StringPtrInput
	// Specify whether to override the resources at the destination if a resources with the same name exist. (Default: `true`)
	Override pulumi.BoolPtrInput
	// The registry ID of the Registry Endpoint.
	RegistryId pulumi.IntInput
	// The scheduled time of when the container register will be push / pull. In cron base format. Hourly `"0 0 * * * *"`, Daily `"0 0 0 * * *"`, Monthly `"0 0 0 * * 0"`. Can be one of the following: `eventBased`, `manual`, `cron format` (Default: `manual`)
	Schedule pulumi.StringPtrInput
	// The Maximum network bandwidth in Kbps for each execution. Default is `-1` (unlimited).
	Speed pulumi.IntPtrInput
}

func (ReplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*replicationArgs)(nil)).Elem()
}

type ReplicationInput interface {
	pulumi.Input

	ToReplicationOutput() ReplicationOutput
	ToReplicationOutputWithContext(ctx context.Context) ReplicationOutput
}

func (*Replication) ElementType() reflect.Type {
	return reflect.TypeOf((**Replication)(nil)).Elem()
}

func (i *Replication) ToReplicationOutput() ReplicationOutput {
	return i.ToReplicationOutputWithContext(context.Background())
}

func (i *Replication) ToReplicationOutputWithContext(ctx context.Context) ReplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationOutput)
}

// ReplicationArrayInput is an input type that accepts ReplicationArray and ReplicationArrayOutput values.
// You can construct a concrete instance of `ReplicationArrayInput` via:
//
//	ReplicationArray{ ReplicationArgs{...} }
type ReplicationArrayInput interface {
	pulumi.Input

	ToReplicationArrayOutput() ReplicationArrayOutput
	ToReplicationArrayOutputWithContext(context.Context) ReplicationArrayOutput
}

type ReplicationArray []ReplicationInput

func (ReplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Replication)(nil)).Elem()
}

func (i ReplicationArray) ToReplicationArrayOutput() ReplicationArrayOutput {
	return i.ToReplicationArrayOutputWithContext(context.Background())
}

func (i ReplicationArray) ToReplicationArrayOutputWithContext(ctx context.Context) ReplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationArrayOutput)
}

// ReplicationMapInput is an input type that accepts ReplicationMap and ReplicationMapOutput values.
// You can construct a concrete instance of `ReplicationMapInput` via:
//
//	ReplicationMap{ "key": ReplicationArgs{...} }
type ReplicationMapInput interface {
	pulumi.Input

	ToReplicationMapOutput() ReplicationMapOutput
	ToReplicationMapOutputWithContext(context.Context) ReplicationMapOutput
}

type ReplicationMap map[string]ReplicationInput

func (ReplicationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Replication)(nil)).Elem()
}

func (i ReplicationMap) ToReplicationMapOutput() ReplicationMapOutput {
	return i.ToReplicationMapOutputWithContext(context.Background())
}

func (i ReplicationMap) ToReplicationMapOutputWithContext(ctx context.Context) ReplicationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationMapOutput)
}

type ReplicationOutput struct{ *pulumi.OutputState }

func (ReplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Replication)(nil)).Elem()
}

func (o ReplicationOutput) ToReplicationOutput() ReplicationOutput {
	return o
}

func (o ReplicationOutput) ToReplicationOutputWithContext(ctx context.Context) ReplicationOutput {
	return o
}

func (o ReplicationOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v *Replication) pulumi.StringOutput { return v.Action }).(pulumi.StringOutput)
}

// Specify whether to enable the artifact blobs copied by chunks. (Default: `false`)
func (o ReplicationOutput) CopyByChunk() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Replication) pulumi.BoolPtrOutput { return v.CopyByChunk }).(pulumi.BoolPtrOutput)
}

// Specify whether to delete the remote resources when locally deleted. (Default: `false`)
func (o ReplicationOutput) Deletion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Replication) pulumi.BoolPtrOutput { return v.Deletion }).(pulumi.BoolPtrOutput)
}

// Description of the replication policy.
func (o ReplicationOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Replication) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Specify the destination namespace. if empty, the resource will be put under the same namespace as the source.
func (o ReplicationOutput) DestNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Replication) pulumi.StringPtrOutput { return v.DestNamespace }).(pulumi.StringPtrOutput)
}

// Specify the destination namespace flattening policy. Integers from `-1` to `3` are valid values in the harbor API. A value of `-1` will 'Flatten All Levels', `0` means 'No Flattening', `1` 'Flatten 1 Level', `2` 'Flatten 2 Levels', `3` 'Flatten 3 Levels' (Default: `-1`, see [Replication Rules](https://goharbor.io/docs/latest/administration/configuring-replication/create-replication-rules/) for more details)
func (o ReplicationOutput) DestNamespaceReplace() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Replication) pulumi.IntPtrOutput { return v.DestNamespaceReplace }).(pulumi.IntPtrOutput)
}

// Specify whether the replication is enabled. (Default: `true`)
func (o ReplicationOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Replication) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Specify whether to execute the replication rule if new or modified. (Default: `false`)
func (o ReplicationOutput) ExecuteOnChanged() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Replication) pulumi.BoolPtrOutput { return v.ExecuteOnChanged }).(pulumi.BoolPtrOutput)
}

func (o ReplicationOutput) Filters() ReplicationFilterArrayOutput {
	return o.ApplyT(func(v *Replication) ReplicationFilterArrayOutput { return v.Filters }).(ReplicationFilterArrayOutput)
}

// The name of the replication.
func (o ReplicationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Replication) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specify whether to override the resources at the destination if a resources with the same name exist. (Default: `true`)
func (o ReplicationOutput) Override() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Replication) pulumi.BoolPtrOutput { return v.Override }).(pulumi.BoolPtrOutput)
}

// The registry ID of the Registry Endpoint.
func (o ReplicationOutput) RegistryId() pulumi.IntOutput {
	return o.ApplyT(func(v *Replication) pulumi.IntOutput { return v.RegistryId }).(pulumi.IntOutput)
}

func (o ReplicationOutput) ReplicationPolicyId() pulumi.IntOutput {
	return o.ApplyT(func(v *Replication) pulumi.IntOutput { return v.ReplicationPolicyId }).(pulumi.IntOutput)
}

// The scheduled time of when the container register will be push / pull. In cron base format. Hourly `"0 0 * * * *"`, Daily `"0 0 0 * * *"`, Monthly `"0 0 0 * * 0"`. Can be one of the following: `eventBased`, `manual`, `cron format` (Default: `manual`)
func (o ReplicationOutput) Schedule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Replication) pulumi.StringPtrOutput { return v.Schedule }).(pulumi.StringPtrOutput)
}

// The Maximum network bandwidth in Kbps for each execution. Default is `-1` (unlimited).
func (o ReplicationOutput) Speed() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Replication) pulumi.IntPtrOutput { return v.Speed }).(pulumi.IntPtrOutput)
}

type ReplicationArrayOutput struct{ *pulumi.OutputState }

func (ReplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Replication)(nil)).Elem()
}

func (o ReplicationArrayOutput) ToReplicationArrayOutput() ReplicationArrayOutput {
	return o
}

func (o ReplicationArrayOutput) ToReplicationArrayOutputWithContext(ctx context.Context) ReplicationArrayOutput {
	return o
}

func (o ReplicationArrayOutput) Index(i pulumi.IntInput) ReplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Replication {
		return vs[0].([]*Replication)[vs[1].(int)]
	}).(ReplicationOutput)
}

type ReplicationMapOutput struct{ *pulumi.OutputState }

func (ReplicationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Replication)(nil)).Elem()
}

func (o ReplicationMapOutput) ToReplicationMapOutput() ReplicationMapOutput {
	return o
}

func (o ReplicationMapOutput) ToReplicationMapOutputWithContext(ctx context.Context) ReplicationMapOutput {
	return o
}

func (o ReplicationMapOutput) MapIndex(k pulumi.StringInput) ReplicationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Replication {
		return vs[0].(map[string]*Replication)[vs[1].(string)]
	}).(ReplicationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicationInput)(nil)).Elem(), &Replication{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicationArrayInput)(nil)).Elem(), ReplicationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicationMapInput)(nil)).Elem(), ReplicationMap{})
	pulumi.RegisterOutputType(ReplicationOutput{})
	pulumi.RegisterOutputType(ReplicationArrayOutput{})
	pulumi.RegisterOutputType(ReplicationMapOutput{})
}
