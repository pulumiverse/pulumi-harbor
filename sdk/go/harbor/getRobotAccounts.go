// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package harbor

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-harbor/sdk/v3/go/harbor/internal"
)

// ## Example Usage
func GetRobotAccounts(ctx *pulumi.Context, args *GetRobotAccountsArgs, opts ...pulumi.InvokeOption) (*GetRobotAccountsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetRobotAccountsResult
	err := ctx.Invoke("harbor:index/getRobotAccounts:getRobotAccounts", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRobotAccounts.
type GetRobotAccountsArgs struct {
	// Level of the robot account, currently either `system` or `project`. Default is `system`.
	Level *string `pulumi:"level"`
	// The name of the robot account to filter by.
	Name *string `pulumi:"name"`
	// The id of the project within harbor.
	ProjectId *int `pulumi:"projectId"`
}

// A collection of values returned by getRobotAccounts.
type GetRobotAccountsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Level of the robot account, currently either `system` or `project`. Default is `system`.
	Level *string `pulumi:"level"`
	// The name of the robot account to filter by.
	Name *string `pulumi:"name"`
	// The id of the project within harbor.
	ProjectId     *int                           `pulumi:"projectId"`
	RobotAccounts []GetRobotAccountsRobotAccount `pulumi:"robotAccounts"`
}

func GetRobotAccountsOutput(ctx *pulumi.Context, args GetRobotAccountsOutputArgs, opts ...pulumi.InvokeOption) GetRobotAccountsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetRobotAccountsResultOutput, error) {
			args := v.(GetRobotAccountsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("harbor:index/getRobotAccounts:getRobotAccounts", args, GetRobotAccountsResultOutput{}, options).(GetRobotAccountsResultOutput), nil
		}).(GetRobotAccountsResultOutput)
}

// A collection of arguments for invoking getRobotAccounts.
type GetRobotAccountsOutputArgs struct {
	// Level of the robot account, currently either `system` or `project`. Default is `system`.
	Level pulumi.StringPtrInput `pulumi:"level"`
	// The name of the robot account to filter by.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The id of the project within harbor.
	ProjectId pulumi.IntPtrInput `pulumi:"projectId"`
}

func (GetRobotAccountsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRobotAccountsArgs)(nil)).Elem()
}

// A collection of values returned by getRobotAccounts.
type GetRobotAccountsResultOutput struct{ *pulumi.OutputState }

func (GetRobotAccountsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRobotAccountsResult)(nil)).Elem()
}

func (o GetRobotAccountsResultOutput) ToGetRobotAccountsResultOutput() GetRobotAccountsResultOutput {
	return o
}

func (o GetRobotAccountsResultOutput) ToGetRobotAccountsResultOutputWithContext(ctx context.Context) GetRobotAccountsResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetRobotAccountsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRobotAccountsResult) string { return v.Id }).(pulumi.StringOutput)
}

// Level of the robot account, currently either `system` or `project`. Default is `system`.
func (o GetRobotAccountsResultOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRobotAccountsResult) *string { return v.Level }).(pulumi.StringPtrOutput)
}

// The name of the robot account to filter by.
func (o GetRobotAccountsResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRobotAccountsResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The id of the project within harbor.
func (o GetRobotAccountsResultOutput) ProjectId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetRobotAccountsResult) *int { return v.ProjectId }).(pulumi.IntPtrOutput)
}

func (o GetRobotAccountsResultOutput) RobotAccounts() GetRobotAccountsRobotAccountArrayOutput {
	return o.ApplyT(func(v GetRobotAccountsResult) []GetRobotAccountsRobotAccount { return v.RobotAccounts }).(GetRobotAccountsRobotAccountArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetRobotAccountsResultOutput{})
}
