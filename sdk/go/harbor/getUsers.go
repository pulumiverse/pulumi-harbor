// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package harbor

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-harbor/sdk/v3/go/harbor/internal"
)

// ## Example Usage
func GetUsers(ctx *pulumi.Context, args *GetUsersArgs, opts ...pulumi.InvokeOption) (*GetUsersResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetUsersResult
	err := ctx.Invoke("harbor:index/getUsers:getUsers", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getUsers.
type GetUsersArgs struct {
	// The email of the user to filter by.
	Email *string `pulumi:"email"`
	// The name of the user to filter by.
	Username *string `pulumi:"username"`
}

// A collection of values returned by getUsers.
type GetUsersResult struct {
	// The email of the user to filter by.
	Email *string `pulumi:"email"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The name of the user to filter by.
	Username *string        `pulumi:"username"`
	Users    []GetUsersUser `pulumi:"users"`
}

func GetUsersOutput(ctx *pulumi.Context, args GetUsersOutputArgs, opts ...pulumi.InvokeOption) GetUsersResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetUsersResultOutput, error) {
			args := v.(GetUsersArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv GetUsersResult
			secret, err := ctx.InvokePackageRaw("harbor:index/getUsers:getUsers", args, &rv, "", opts...)
			if err != nil {
				return GetUsersResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(GetUsersResultOutput)
			if secret {
				return pulumi.ToSecret(output).(GetUsersResultOutput), nil
			}
			return output, nil
		}).(GetUsersResultOutput)
}

// A collection of arguments for invoking getUsers.
type GetUsersOutputArgs struct {
	// The email of the user to filter by.
	Email pulumi.StringPtrInput `pulumi:"email"`
	// The name of the user to filter by.
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (GetUsersOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsersArgs)(nil)).Elem()
}

// A collection of values returned by getUsers.
type GetUsersResultOutput struct{ *pulumi.OutputState }

func (GetUsersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsersResult)(nil)).Elem()
}

func (o GetUsersResultOutput) ToGetUsersResultOutput() GetUsersResultOutput {
	return o
}

func (o GetUsersResultOutput) ToGetUsersResultOutputWithContext(ctx context.Context) GetUsersResultOutput {
	return o
}

// The email of the user to filter by.
func (o GetUsersResultOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetUsersResult) *string { return v.Email }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetUsersResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the user to filter by.
func (o GetUsersResultOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetUsersResult) *string { return v.Username }).(pulumi.StringPtrOutput)
}

func (o GetUsersResultOutput) Users() GetUsersUserArrayOutput {
	return o.ApplyT(func(v GetUsersResult) []GetUsersUser { return v.Users }).(GetUsersUserArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetUsersResultOutput{})
}
