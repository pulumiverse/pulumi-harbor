// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package harbor

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-harbor/sdk/v3/go/harbor/internal"
)

// ## Example Usage
type ConfigSystem struct {
	pulumi.CustomResourceState

	ProjectCreationRestriction pulumi.StringPtrOutput `pulumi:"projectCreationRestriction"`
	ReadOnly                   pulumi.BoolPtrOutput   `pulumi:"readOnly"`
	RobotNamePrefix            pulumi.StringPtrOutput `pulumi:"robotNamePrefix"`
	RobotTokenExpiration       pulumi.IntPtrOutput    `pulumi:"robotTokenExpiration"`
	ScannerSkipUpdatePulltime  pulumi.BoolPtrOutput   `pulumi:"scannerSkipUpdatePulltime"`
	StoragePerProject          pulumi.IntPtrOutput    `pulumi:"storagePerProject"`
}

// NewConfigSystem registers a new resource with the given unique name, arguments, and options.
func NewConfigSystem(ctx *pulumi.Context,
	name string, args *ConfigSystemArgs, opts ...pulumi.ResourceOption) (*ConfigSystem, error) {
	if args == nil {
		args = &ConfigSystemArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ConfigSystem
	err := ctx.RegisterResource("harbor:index/configSystem:ConfigSystem", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetConfigSystem gets an existing ConfigSystem resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetConfigSystem(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ConfigSystemState, opts ...pulumi.ResourceOption) (*ConfigSystem, error) {
	var resource ConfigSystem
	err := ctx.ReadResource("harbor:index/configSystem:ConfigSystem", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ConfigSystem resources.
type configSystemState struct {
	ProjectCreationRestriction *string `pulumi:"projectCreationRestriction"`
	ReadOnly                   *bool   `pulumi:"readOnly"`
	RobotNamePrefix            *string `pulumi:"robotNamePrefix"`
	RobotTokenExpiration       *int    `pulumi:"robotTokenExpiration"`
	ScannerSkipUpdatePulltime  *bool   `pulumi:"scannerSkipUpdatePulltime"`
	StoragePerProject          *int    `pulumi:"storagePerProject"`
}

type ConfigSystemState struct {
	ProjectCreationRestriction pulumi.StringPtrInput
	ReadOnly                   pulumi.BoolPtrInput
	RobotNamePrefix            pulumi.StringPtrInput
	RobotTokenExpiration       pulumi.IntPtrInput
	ScannerSkipUpdatePulltime  pulumi.BoolPtrInput
	StoragePerProject          pulumi.IntPtrInput
}

func (ConfigSystemState) ElementType() reflect.Type {
	return reflect.TypeOf((*configSystemState)(nil)).Elem()
}

type configSystemArgs struct {
	ProjectCreationRestriction *string `pulumi:"projectCreationRestriction"`
	ReadOnly                   *bool   `pulumi:"readOnly"`
	RobotNamePrefix            *string `pulumi:"robotNamePrefix"`
	RobotTokenExpiration       *int    `pulumi:"robotTokenExpiration"`
	ScannerSkipUpdatePulltime  *bool   `pulumi:"scannerSkipUpdatePulltime"`
	StoragePerProject          *int    `pulumi:"storagePerProject"`
}

// The set of arguments for constructing a ConfigSystem resource.
type ConfigSystemArgs struct {
	ProjectCreationRestriction pulumi.StringPtrInput
	ReadOnly                   pulumi.BoolPtrInput
	RobotNamePrefix            pulumi.StringPtrInput
	RobotTokenExpiration       pulumi.IntPtrInput
	ScannerSkipUpdatePulltime  pulumi.BoolPtrInput
	StoragePerProject          pulumi.IntPtrInput
}

func (ConfigSystemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*configSystemArgs)(nil)).Elem()
}

type ConfigSystemInput interface {
	pulumi.Input

	ToConfigSystemOutput() ConfigSystemOutput
	ToConfigSystemOutputWithContext(ctx context.Context) ConfigSystemOutput
}

func (*ConfigSystem) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigSystem)(nil)).Elem()
}

func (i *ConfigSystem) ToConfigSystemOutput() ConfigSystemOutput {
	return i.ToConfigSystemOutputWithContext(context.Background())
}

func (i *ConfigSystem) ToConfigSystemOutputWithContext(ctx context.Context) ConfigSystemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigSystemOutput)
}

// ConfigSystemArrayInput is an input type that accepts ConfigSystemArray and ConfigSystemArrayOutput values.
// You can construct a concrete instance of `ConfigSystemArrayInput` via:
//
//	ConfigSystemArray{ ConfigSystemArgs{...} }
type ConfigSystemArrayInput interface {
	pulumi.Input

	ToConfigSystemArrayOutput() ConfigSystemArrayOutput
	ToConfigSystemArrayOutputWithContext(context.Context) ConfigSystemArrayOutput
}

type ConfigSystemArray []ConfigSystemInput

func (ConfigSystemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ConfigSystem)(nil)).Elem()
}

func (i ConfigSystemArray) ToConfigSystemArrayOutput() ConfigSystemArrayOutput {
	return i.ToConfigSystemArrayOutputWithContext(context.Background())
}

func (i ConfigSystemArray) ToConfigSystemArrayOutputWithContext(ctx context.Context) ConfigSystemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigSystemArrayOutput)
}

// ConfigSystemMapInput is an input type that accepts ConfigSystemMap and ConfigSystemMapOutput values.
// You can construct a concrete instance of `ConfigSystemMapInput` via:
//
//	ConfigSystemMap{ "key": ConfigSystemArgs{...} }
type ConfigSystemMapInput interface {
	pulumi.Input

	ToConfigSystemMapOutput() ConfigSystemMapOutput
	ToConfigSystemMapOutputWithContext(context.Context) ConfigSystemMapOutput
}

type ConfigSystemMap map[string]ConfigSystemInput

func (ConfigSystemMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ConfigSystem)(nil)).Elem()
}

func (i ConfigSystemMap) ToConfigSystemMapOutput() ConfigSystemMapOutput {
	return i.ToConfigSystemMapOutputWithContext(context.Background())
}

func (i ConfigSystemMap) ToConfigSystemMapOutputWithContext(ctx context.Context) ConfigSystemMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigSystemMapOutput)
}

type ConfigSystemOutput struct{ *pulumi.OutputState }

func (ConfigSystemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigSystem)(nil)).Elem()
}

func (o ConfigSystemOutput) ToConfigSystemOutput() ConfigSystemOutput {
	return o
}

func (o ConfigSystemOutput) ToConfigSystemOutputWithContext(ctx context.Context) ConfigSystemOutput {
	return o
}

func (o ConfigSystemOutput) ProjectCreationRestriction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigSystem) pulumi.StringPtrOutput { return v.ProjectCreationRestriction }).(pulumi.StringPtrOutput)
}

func (o ConfigSystemOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConfigSystem) pulumi.BoolPtrOutput { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

func (o ConfigSystemOutput) RobotNamePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigSystem) pulumi.StringPtrOutput { return v.RobotNamePrefix }).(pulumi.StringPtrOutput)
}

func (o ConfigSystemOutput) RobotTokenExpiration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConfigSystem) pulumi.IntPtrOutput { return v.RobotTokenExpiration }).(pulumi.IntPtrOutput)
}

func (o ConfigSystemOutput) ScannerSkipUpdatePulltime() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConfigSystem) pulumi.BoolPtrOutput { return v.ScannerSkipUpdatePulltime }).(pulumi.BoolPtrOutput)
}

func (o ConfigSystemOutput) StoragePerProject() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConfigSystem) pulumi.IntPtrOutput { return v.StoragePerProject }).(pulumi.IntPtrOutput)
}

type ConfigSystemArrayOutput struct{ *pulumi.OutputState }

func (ConfigSystemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ConfigSystem)(nil)).Elem()
}

func (o ConfigSystemArrayOutput) ToConfigSystemArrayOutput() ConfigSystemArrayOutput {
	return o
}

func (o ConfigSystemArrayOutput) ToConfigSystemArrayOutputWithContext(ctx context.Context) ConfigSystemArrayOutput {
	return o
}

func (o ConfigSystemArrayOutput) Index(i pulumi.IntInput) ConfigSystemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ConfigSystem {
		return vs[0].([]*ConfigSystem)[vs[1].(int)]
	}).(ConfigSystemOutput)
}

type ConfigSystemMapOutput struct{ *pulumi.OutputState }

func (ConfigSystemMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ConfigSystem)(nil)).Elem()
}

func (o ConfigSystemMapOutput) ToConfigSystemMapOutput() ConfigSystemMapOutput {
	return o
}

func (o ConfigSystemMapOutput) ToConfigSystemMapOutputWithContext(ctx context.Context) ConfigSystemMapOutput {
	return o
}

func (o ConfigSystemMapOutput) MapIndex(k pulumi.StringInput) ConfigSystemOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ConfigSystem {
		return vs[0].(map[string]*ConfigSystem)[vs[1].(string)]
	}).(ConfigSystemOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigSystemInput)(nil)).Elem(), &ConfigSystem{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigSystemArrayInput)(nil)).Elem(), ConfigSystemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigSystemMapInput)(nil)).Elem(), ConfigSystemMap{})
	pulumi.RegisterOutputType(ConfigSystemOutput{})
	pulumi.RegisterOutputType(ConfigSystemArrayOutput{})
	pulumi.RegisterOutputType(ConfigSystemMapOutput{})
}
