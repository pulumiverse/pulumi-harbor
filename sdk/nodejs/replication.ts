// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import harbor:index/replication:Replication main /replication/policies/1
 * ```
 */
export class Replication extends pulumi.CustomResource {
    /**
     * Get an existing Replication resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ReplicationState, opts?: pulumi.CustomResourceOptions): Replication {
        return new Replication(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'harbor:index/replication:Replication';

    /**
     * Returns true if the given object is an instance of Replication.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Replication {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Replication.__pulumiType;
    }

    public readonly action!: pulumi.Output<string>;
    /**
     * Specify whether to enable the artifact blobs copied by chunks. (Default: `false`)
     */
    public readonly copyByChunk!: pulumi.Output<boolean | undefined>;
    /**
     * Specify whether to delete the remote resources when locally deleted. (Default: `false`)
     */
    public readonly deletion!: pulumi.Output<boolean | undefined>;
    /**
     * Description of the replication policy.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Specify the destination namespace. if empty, the resource will be put under the same namespace as the source.
     */
    public readonly destNamespace!: pulumi.Output<string | undefined>;
    /**
     * Specify the destination namespace flattening policy. Integers from `-1` to `3` are valid values in the harbor API. A value of `-1` will 'Flatten All Levels', `0` means 'No Flattening', `1` 'Flatten 1 Level', `2` 'Flatten 2 Levels', `3` 'Flatten 3 Levels' (Default: `-1`, see [Replication Rules](https://goharbor.io/docs/latest/administration/configuring-replication/create-replication-rules/) for more details)
     */
    public readonly destNamespaceReplace!: pulumi.Output<number | undefined>;
    /**
     * Specify whether the replication is enabled. (Default: `true`)
     */
    public readonly enabled!: pulumi.Output<boolean | undefined>;
    /**
     * Specify whether to execute the replication rule if new or modified. (Default: `false`)
     */
    public readonly executeOnChanged!: pulumi.Output<boolean | undefined>;
    public readonly filters!: pulumi.Output<outputs.ReplicationFilter[] | undefined>;
    /**
     * The name of the replication.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Specify whether to override the resources at the destination if a resources with the same name exist. (Default: `true`)
     */
    public readonly override!: pulumi.Output<boolean | undefined>;
    /**
     * The registry ID of the Registry Endpoint.
     */
    public readonly registryId!: pulumi.Output<number>;
    public /*out*/ readonly replicationPolicyId!: pulumi.Output<number>;
    /**
     * The scheduled time of when the container register will be push / pull. In cron base format. Hourly `"0 0 * * * *"`, Daily `"0 0 0 * * *"`, Monthly `"0 0 0 * * 0"`. Can be one of the following: `eventBased`, `manual`, `cron format` (Default: `manual`)
     */
    public readonly schedule!: pulumi.Output<string | undefined>;
    /**
     * The Maximum network bandwidth in Kbps for each execution. Default is `-1` (unlimited).
     */
    public readonly speed!: pulumi.Output<number | undefined>;

    /**
     * Create a Replication resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ReplicationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ReplicationArgs | ReplicationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ReplicationState | undefined;
            resourceInputs["action"] = state ? state.action : undefined;
            resourceInputs["copyByChunk"] = state ? state.copyByChunk : undefined;
            resourceInputs["deletion"] = state ? state.deletion : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["destNamespace"] = state ? state.destNamespace : undefined;
            resourceInputs["destNamespaceReplace"] = state ? state.destNamespaceReplace : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["executeOnChanged"] = state ? state.executeOnChanged : undefined;
            resourceInputs["filters"] = state ? state.filters : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["override"] = state ? state.override : undefined;
            resourceInputs["registryId"] = state ? state.registryId : undefined;
            resourceInputs["replicationPolicyId"] = state ? state.replicationPolicyId : undefined;
            resourceInputs["schedule"] = state ? state.schedule : undefined;
            resourceInputs["speed"] = state ? state.speed : undefined;
        } else {
            const args = argsOrState as ReplicationArgs | undefined;
            if ((!args || args.action === undefined) && !opts.urn) {
                throw new Error("Missing required property 'action'");
            }
            if ((!args || args.registryId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'registryId'");
            }
            resourceInputs["action"] = args ? args.action : undefined;
            resourceInputs["copyByChunk"] = args ? args.copyByChunk : undefined;
            resourceInputs["deletion"] = args ? args.deletion : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["destNamespace"] = args ? args.destNamespace : undefined;
            resourceInputs["destNamespaceReplace"] = args ? args.destNamespaceReplace : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["executeOnChanged"] = args ? args.executeOnChanged : undefined;
            resourceInputs["filters"] = args ? args.filters : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["override"] = args ? args.override : undefined;
            resourceInputs["registryId"] = args ? args.registryId : undefined;
            resourceInputs["schedule"] = args ? args.schedule : undefined;
            resourceInputs["speed"] = args ? args.speed : undefined;
            resourceInputs["replicationPolicyId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Replication.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Replication resources.
 */
export interface ReplicationState {
    action?: pulumi.Input<string>;
    /**
     * Specify whether to enable the artifact blobs copied by chunks. (Default: `false`)
     */
    copyByChunk?: pulumi.Input<boolean>;
    /**
     * Specify whether to delete the remote resources when locally deleted. (Default: `false`)
     */
    deletion?: pulumi.Input<boolean>;
    /**
     * Description of the replication policy.
     */
    description?: pulumi.Input<string>;
    /**
     * Specify the destination namespace. if empty, the resource will be put under the same namespace as the source.
     */
    destNamespace?: pulumi.Input<string>;
    /**
     * Specify the destination namespace flattening policy. Integers from `-1` to `3` are valid values in the harbor API. A value of `-1` will 'Flatten All Levels', `0` means 'No Flattening', `1` 'Flatten 1 Level', `2` 'Flatten 2 Levels', `3` 'Flatten 3 Levels' (Default: `-1`, see [Replication Rules](https://goharbor.io/docs/latest/administration/configuring-replication/create-replication-rules/) for more details)
     */
    destNamespaceReplace?: pulumi.Input<number>;
    /**
     * Specify whether the replication is enabled. (Default: `true`)
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Specify whether to execute the replication rule if new or modified. (Default: `false`)
     */
    executeOnChanged?: pulumi.Input<boolean>;
    filters?: pulumi.Input<pulumi.Input<inputs.ReplicationFilter>[]>;
    /**
     * The name of the replication.
     */
    name?: pulumi.Input<string>;
    /**
     * Specify whether to override the resources at the destination if a resources with the same name exist. (Default: `true`)
     */
    override?: pulumi.Input<boolean>;
    /**
     * The registry ID of the Registry Endpoint.
     */
    registryId?: pulumi.Input<number>;
    replicationPolicyId?: pulumi.Input<number>;
    /**
     * The scheduled time of when the container register will be push / pull. In cron base format. Hourly `"0 0 * * * *"`, Daily `"0 0 0 * * *"`, Monthly `"0 0 0 * * 0"`. Can be one of the following: `eventBased`, `manual`, `cron format` (Default: `manual`)
     */
    schedule?: pulumi.Input<string>;
    /**
     * The Maximum network bandwidth in Kbps for each execution. Default is `-1` (unlimited).
     */
    speed?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a Replication resource.
 */
export interface ReplicationArgs {
    action: pulumi.Input<string>;
    /**
     * Specify whether to enable the artifact blobs copied by chunks. (Default: `false`)
     */
    copyByChunk?: pulumi.Input<boolean>;
    /**
     * Specify whether to delete the remote resources when locally deleted. (Default: `false`)
     */
    deletion?: pulumi.Input<boolean>;
    /**
     * Description of the replication policy.
     */
    description?: pulumi.Input<string>;
    /**
     * Specify the destination namespace. if empty, the resource will be put under the same namespace as the source.
     */
    destNamespace?: pulumi.Input<string>;
    /**
     * Specify the destination namespace flattening policy. Integers from `-1` to `3` are valid values in the harbor API. A value of `-1` will 'Flatten All Levels', `0` means 'No Flattening', `1` 'Flatten 1 Level', `2` 'Flatten 2 Levels', `3` 'Flatten 3 Levels' (Default: `-1`, see [Replication Rules](https://goharbor.io/docs/latest/administration/configuring-replication/create-replication-rules/) for more details)
     */
    destNamespaceReplace?: pulumi.Input<number>;
    /**
     * Specify whether the replication is enabled. (Default: `true`)
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Specify whether to execute the replication rule if new or modified. (Default: `false`)
     */
    executeOnChanged?: pulumi.Input<boolean>;
    filters?: pulumi.Input<pulumi.Input<inputs.ReplicationFilter>[]>;
    /**
     * The name of the replication.
     */
    name?: pulumi.Input<string>;
    /**
     * Specify whether to override the resources at the destination if a resources with the same name exist. (Default: `true`)
     */
    override?: pulumi.Input<boolean>;
    /**
     * The registry ID of the Registry Endpoint.
     */
    registryId: pulumi.Input<number>;
    /**
     * The scheduled time of when the container register will be push / pull. In cron base format. Hourly `"0 0 * * * *"`, Daily `"0 0 0 * * *"`, Monthly `"0 0 0 * * 0"`. Can be one of the following: `eventBased`, `manual`, `cron format` (Default: `manual`)
     */
    schedule?: pulumi.Input<string>;
    /**
     * The Maximum network bandwidth in Kbps for each execution. Default is `-1` (unlimited).
     */
    speed?: pulumi.Input<number>;
}
