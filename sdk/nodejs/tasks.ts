// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as harbor from "@pulumiverse/harbor";
 *
 * const main = new harbor.Tasks("main", {vulnerabilityScanPolicy: "daily"});
 * ```
 */
export class Tasks extends pulumi.CustomResource {
    /**
     * Get an existing Tasks resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TasksState, opts?: pulumi.CustomResourceOptions): Tasks {
        return new Tasks(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'harbor:index/tasks:Tasks';

    /**
     * Returns true if the given object is an instance of Tasks.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Tasks {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Tasks.__pulumiType;
    }

    public readonly vulnerabilityScanPolicy!: pulumi.Output<string>;

    /**
     * Create a Tasks resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TasksArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TasksArgs | TasksState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TasksState | undefined;
            resourceInputs["vulnerabilityScanPolicy"] = state ? state.vulnerabilityScanPolicy : undefined;
        } else {
            const args = argsOrState as TasksArgs | undefined;
            if ((!args || args.vulnerabilityScanPolicy === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vulnerabilityScanPolicy'");
            }
            resourceInputs["vulnerabilityScanPolicy"] = args ? args.vulnerabilityScanPolicy : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Tasks.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Tasks resources.
 */
export interface TasksState {
    vulnerabilityScanPolicy?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Tasks resource.
 */
export interface TasksArgs {
    vulnerabilityScanPolicy: pulumi.Input<string>;
}
