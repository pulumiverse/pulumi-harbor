// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 */
export function getProjects(args?: GetProjectsArgs, opts?: pulumi.InvokeOptions): Promise<GetProjectsResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("harbor:index/getProjects:getProjects", {
        "name": args.name,
        "public": args.public,
        "type": args.type,
        "vulnerabilityScanning": args.vulnerabilityScanning,
    }, opts);
}

/**
 * A collection of arguments for invoking getProjects.
 */
export interface GetProjectsArgs {
    /**
     * The name of the project.
     */
    name?: string;
    /**
     * If the project has public accessibility.
     */
    public?: boolean;
    /**
     * The type of the project : Project or ProxyCache.
     */
    type?: string;
    /**
     * If the images will be scanned for vulnerabilities when push to harbor.
     */
    vulnerabilityScanning?: boolean;
}

/**
 * A collection of values returned by getProjects.
 */
export interface GetProjectsResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The name of the project.
     */
    readonly name?: string;
    readonly projects: outputs.GetProjectsProject[];
    /**
     * If the project has public accessibility.
     */
    readonly public?: boolean;
    /**
     * The type of the project : Project or ProxyCache.
     */
    readonly type?: string;
    /**
     * If the images will be scanned for vulnerabilities when push to harbor.
     */
    readonly vulnerabilityScanning?: boolean;
}
/**
 * ## Example Usage
 */
export function getProjectsOutput(args?: GetProjectsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetProjectsResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("harbor:index/getProjects:getProjects", {
        "name": args.name,
        "public": args.public,
        "type": args.type,
        "vulnerabilityScanning": args.vulnerabilityScanning,
    }, opts);
}

/**
 * A collection of arguments for invoking getProjects.
 */
export interface GetProjectsOutputArgs {
    /**
     * The name of the project.
     */
    name?: pulumi.Input<string>;
    /**
     * If the project has public accessibility.
     */
    public?: pulumi.Input<boolean>;
    /**
     * The type of the project : Project or ProxyCache.
     */
    type?: pulumi.Input<string>;
    /**
     * If the images will be scanned for vulnerabilities when push to harbor.
     */
    vulnerabilityScanning?: pulumi.Input<boolean>;
}
