// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumiverse.harbor.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumiverse.harbor.inputs.RobotAccountPermissionAccessArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class RobotAccountPermissionArgs extends com.pulumi.resources.ResourceArgs {

    public static final RobotAccountPermissionArgs Empty = new RobotAccountPermissionArgs();

    @Import(name="accesses", required=true)
    private Output<List<RobotAccountPermissionAccessArgs>> accesses;

    public Output<List<RobotAccountPermissionAccessArgs>> accesses() {
        return this.accesses;
    }

    @Import(name="kind", required=true)
    private Output<String> kind;

    public Output<String> kind() {
        return this.kind;
    }

    @Import(name="namespace", required=true)
    private Output<String> namespace;

    public Output<String> namespace() {
        return this.namespace;
    }

    private RobotAccountPermissionArgs() {}

    private RobotAccountPermissionArgs(RobotAccountPermissionArgs $) {
        this.accesses = $.accesses;
        this.kind = $.kind;
        this.namespace = $.namespace;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RobotAccountPermissionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RobotAccountPermissionArgs $;

        public Builder() {
            $ = new RobotAccountPermissionArgs();
        }

        public Builder(RobotAccountPermissionArgs defaults) {
            $ = new RobotAccountPermissionArgs(Objects.requireNonNull(defaults));
        }

        public Builder accesses(Output<List<RobotAccountPermissionAccessArgs>> accesses) {
            $.accesses = accesses;
            return this;
        }

        public Builder accesses(List<RobotAccountPermissionAccessArgs> accesses) {
            return accesses(Output.of(accesses));
        }

        public Builder accesses(RobotAccountPermissionAccessArgs... accesses) {
            return accesses(List.of(accesses));
        }

        public Builder kind(Output<String> kind) {
            $.kind = kind;
            return this;
        }

        public Builder kind(String kind) {
            return kind(Output.of(kind));
        }

        public Builder namespace(Output<String> namespace) {
            $.namespace = namespace;
            return this;
        }

        public Builder namespace(String namespace) {
            return namespace(Output.of(namespace));
        }

        public RobotAccountPermissionArgs build() {
            $.accesses = Objects.requireNonNull($.accesses, "expected parameter 'accesses' to be non-null");
            $.kind = Objects.requireNonNull($.kind, "expected parameter 'kind' to be non-null");
            $.namespace = Objects.requireNonNull($.namespace, "expected parameter 'namespace' to be non-null");
            return $;
        }
    }

}
