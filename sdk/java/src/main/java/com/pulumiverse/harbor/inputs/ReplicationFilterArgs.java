// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumiverse.harbor.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ReplicationFilterArgs extends com.pulumi.resources.ResourceArgs {

    public static final ReplicationFilterArgs Empty = new ReplicationFilterArgs();

    @Import(name="decoration")
    private @Nullable Output<String> decoration;

    public Optional<Output<String>> decoration() {
        return Optional.ofNullable(this.decoration);
    }

    @Import(name="labels")
    private @Nullable Output<List<String>> labels;

    public Optional<Output<List<String>>> labels() {
        return Optional.ofNullable(this.labels);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="resource")
    private @Nullable Output<String> resource;

    public Optional<Output<String>> resource() {
        return Optional.ofNullable(this.resource);
    }

    @Import(name="tag")
    private @Nullable Output<String> tag;

    public Optional<Output<String>> tag() {
        return Optional.ofNullable(this.tag);
    }

    private ReplicationFilterArgs() {}

    private ReplicationFilterArgs(ReplicationFilterArgs $) {
        this.decoration = $.decoration;
        this.labels = $.labels;
        this.name = $.name;
        this.resource = $.resource;
        this.tag = $.tag;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ReplicationFilterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ReplicationFilterArgs $;

        public Builder() {
            $ = new ReplicationFilterArgs();
        }

        public Builder(ReplicationFilterArgs defaults) {
            $ = new ReplicationFilterArgs(Objects.requireNonNull(defaults));
        }

        public Builder decoration(@Nullable Output<String> decoration) {
            $.decoration = decoration;
            return this;
        }

        public Builder decoration(String decoration) {
            return decoration(Output.of(decoration));
        }

        public Builder labels(@Nullable Output<List<String>> labels) {
            $.labels = labels;
            return this;
        }

        public Builder labels(List<String> labels) {
            return labels(Output.of(labels));
        }

        public Builder labels(String... labels) {
            return labels(List.of(labels));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder resource(@Nullable Output<String> resource) {
            $.resource = resource;
            return this;
        }

        public Builder resource(String resource) {
            return resource(Output.of(resource));
        }

        public Builder tag(@Nullable Output<String> tag) {
            $.tag = tag;
            return this;
        }

        public Builder tag(String tag) {
            return tag(Output.of(tag));
        }

        public ReplicationFilterArgs build() {
            return $;
        }
    }

}
