// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumiverse.harbor.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ProjectMemberUserState extends com.pulumi.resources.ResourceArgs {

    public static final ProjectMemberUserState Empty = new ProjectMemberUserState();

    @Import(name="memberId")
    private @Nullable Output<Integer> memberId;

    public Optional<Output<Integer>> memberId() {
        return Optional.ofNullable(this.memberId);
    }

    @Import(name="projectId")
    private @Nullable Output<String> projectId;

    public Optional<Output<String>> projectId() {
        return Optional.ofNullable(this.projectId);
    }

    @Import(name="role")
    private @Nullable Output<String> role;

    public Optional<Output<String>> role() {
        return Optional.ofNullable(this.role);
    }

    @Import(name="userName")
    private @Nullable Output<String> userName;

    public Optional<Output<String>> userName() {
        return Optional.ofNullable(this.userName);
    }

    private ProjectMemberUserState() {}

    private ProjectMemberUserState(ProjectMemberUserState $) {
        this.memberId = $.memberId;
        this.projectId = $.projectId;
        this.role = $.role;
        this.userName = $.userName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProjectMemberUserState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProjectMemberUserState $;

        public Builder() {
            $ = new ProjectMemberUserState();
        }

        public Builder(ProjectMemberUserState defaults) {
            $ = new ProjectMemberUserState(Objects.requireNonNull(defaults));
        }

        public Builder memberId(@Nullable Output<Integer> memberId) {
            $.memberId = memberId;
            return this;
        }

        public Builder memberId(Integer memberId) {
            return memberId(Output.of(memberId));
        }

        public Builder projectId(@Nullable Output<String> projectId) {
            $.projectId = projectId;
            return this;
        }

        public Builder projectId(String projectId) {
            return projectId(Output.of(projectId));
        }

        public Builder role(@Nullable Output<String> role) {
            $.role = role;
            return this;
        }

        public Builder role(String role) {
            return role(Output.of(role));
        }

        public Builder userName(@Nullable Output<String> userName) {
            $.userName = userName;
            return this;
        }

        public Builder userName(String userName) {
            return userName(Output.of(userName));
        }

        public ProjectMemberUserState build() {
            return $;
        }
    }

}
