// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumiverse.harbor.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GarbageCollectionState extends com.pulumi.resources.ResourceArgs {

    public static final GarbageCollectionState Empty = new GarbageCollectionState();

    @Import(name="deleteUntagged")
    private @Nullable Output<Boolean> deleteUntagged;

    public Optional<Output<Boolean>> deleteUntagged() {
        return Optional.ofNullable(this.deleteUntagged);
    }

    @Import(name="schedule")
    private @Nullable Output<String> schedule;

    public Optional<Output<String>> schedule() {
        return Optional.ofNullable(this.schedule);
    }

    private GarbageCollectionState() {}

    private GarbageCollectionState(GarbageCollectionState $) {
        this.deleteUntagged = $.deleteUntagged;
        this.schedule = $.schedule;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GarbageCollectionState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GarbageCollectionState $;

        public Builder() {
            $ = new GarbageCollectionState();
        }

        public Builder(GarbageCollectionState defaults) {
            $ = new GarbageCollectionState(Objects.requireNonNull(defaults));
        }

        public Builder deleteUntagged(@Nullable Output<Boolean> deleteUntagged) {
            $.deleteUntagged = deleteUntagged;
            return this;
        }

        public Builder deleteUntagged(Boolean deleteUntagged) {
            return deleteUntagged(Output.of(deleteUntagged));
        }

        public Builder schedule(@Nullable Output<String> schedule) {
            $.schedule = schedule;
            return this;
        }

        public Builder schedule(String schedule) {
            return schedule(Output.of(schedule));
        }

        public GarbageCollectionState build() {
            return $;
        }
    }

}
