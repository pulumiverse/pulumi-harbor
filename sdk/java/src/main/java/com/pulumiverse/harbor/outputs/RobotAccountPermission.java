// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumiverse.harbor.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumiverse.harbor.outputs.RobotAccountPermissionAccess;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class RobotAccountPermission {
    private List<RobotAccountPermissionAccess> accesses;
    private String kind;
    private String namespace;

    private RobotAccountPermission() {}
    public List<RobotAccountPermissionAccess> accesses() {
        return this.accesses;
    }
    public String kind() {
        return this.kind;
    }
    public String namespace() {
        return this.namespace;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RobotAccountPermission defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<RobotAccountPermissionAccess> accesses;
        private String kind;
        private String namespace;
        public Builder() {}
        public Builder(RobotAccountPermission defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accesses = defaults.accesses;
    	      this.kind = defaults.kind;
    	      this.namespace = defaults.namespace;
        }

        @CustomType.Setter
        public Builder accesses(List<RobotAccountPermissionAccess> accesses) {
            this.accesses = Objects.requireNonNull(accesses);
            return this;
        }
        public Builder accesses(RobotAccountPermissionAccess... accesses) {
            return accesses(List.of(accesses));
        }
        @CustomType.Setter
        public Builder kind(String kind) {
            this.kind = Objects.requireNonNull(kind);
            return this;
        }
        @CustomType.Setter
        public Builder namespace(String namespace) {
            this.namespace = Objects.requireNonNull(namespace);
            return this;
        }
        public RobotAccountPermission build() {
            final var o = new RobotAccountPermission();
            o.accesses = accesses;
            o.kind = kind;
            o.namespace = namespace;
            return o;
        }
    }
}
