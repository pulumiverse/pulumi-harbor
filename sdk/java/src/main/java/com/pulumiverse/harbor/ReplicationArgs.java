// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumiverse.harbor;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumiverse.harbor.inputs.ReplicationFilterArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ReplicationArgs extends com.pulumi.resources.ResourceArgs {

    public static final ReplicationArgs Empty = new ReplicationArgs();

    @Import(name="action", required=true)
    private Output<String> action;

    public Output<String> action() {
        return this.action;
    }

    @Import(name="deletion")
    private @Nullable Output<Boolean> deletion;

    public Optional<Output<Boolean>> deletion() {
        return Optional.ofNullable(this.deletion);
    }

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="destNamespace")
    private @Nullable Output<String> destNamespace;

    public Optional<Output<String>> destNamespace() {
        return Optional.ofNullable(this.destNamespace);
    }

    @Import(name="destNamespaceReplace")
    private @Nullable Output<Integer> destNamespaceReplace;

    public Optional<Output<Integer>> destNamespaceReplace() {
        return Optional.ofNullable(this.destNamespaceReplace);
    }

    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    @Import(name="filters")
    private @Nullable Output<List<ReplicationFilterArgs>> filters;

    public Optional<Output<List<ReplicationFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="override")
    private @Nullable Output<Boolean> override;

    public Optional<Output<Boolean>> override() {
        return Optional.ofNullable(this.override);
    }

    @Import(name="registryId", required=true)
    private Output<Integer> registryId;

    public Output<Integer> registryId() {
        return this.registryId;
    }

    @Import(name="schedule")
    private @Nullable Output<String> schedule;

    public Optional<Output<String>> schedule() {
        return Optional.ofNullable(this.schedule);
    }

    @Import(name="speed")
    private @Nullable Output<Integer> speed;

    public Optional<Output<Integer>> speed() {
        return Optional.ofNullable(this.speed);
    }

    private ReplicationArgs() {}

    private ReplicationArgs(ReplicationArgs $) {
        this.action = $.action;
        this.deletion = $.deletion;
        this.description = $.description;
        this.destNamespace = $.destNamespace;
        this.destNamespaceReplace = $.destNamespaceReplace;
        this.enabled = $.enabled;
        this.filters = $.filters;
        this.name = $.name;
        this.override = $.override;
        this.registryId = $.registryId;
        this.schedule = $.schedule;
        this.speed = $.speed;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ReplicationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ReplicationArgs $;

        public Builder() {
            $ = new ReplicationArgs();
        }

        public Builder(ReplicationArgs defaults) {
            $ = new ReplicationArgs(Objects.requireNonNull(defaults));
        }

        public Builder action(Output<String> action) {
            $.action = action;
            return this;
        }

        public Builder action(String action) {
            return action(Output.of(action));
        }

        public Builder deletion(@Nullable Output<Boolean> deletion) {
            $.deletion = deletion;
            return this;
        }

        public Builder deletion(Boolean deletion) {
            return deletion(Output.of(deletion));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder destNamespace(@Nullable Output<String> destNamespace) {
            $.destNamespace = destNamespace;
            return this;
        }

        public Builder destNamespace(String destNamespace) {
            return destNamespace(Output.of(destNamespace));
        }

        public Builder destNamespaceReplace(@Nullable Output<Integer> destNamespaceReplace) {
            $.destNamespaceReplace = destNamespaceReplace;
            return this;
        }

        public Builder destNamespaceReplace(Integer destNamespaceReplace) {
            return destNamespaceReplace(Output.of(destNamespaceReplace));
        }

        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        public Builder filters(@Nullable Output<List<ReplicationFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(List<ReplicationFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(ReplicationFilterArgs... filters) {
            return filters(List.of(filters));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder override(@Nullable Output<Boolean> override) {
            $.override = override;
            return this;
        }

        public Builder override(Boolean override) {
            return override(Output.of(override));
        }

        public Builder registryId(Output<Integer> registryId) {
            $.registryId = registryId;
            return this;
        }

        public Builder registryId(Integer registryId) {
            return registryId(Output.of(registryId));
        }

        public Builder schedule(@Nullable Output<String> schedule) {
            $.schedule = schedule;
            return this;
        }

        public Builder schedule(String schedule) {
            return schedule(Output.of(schedule));
        }

        public Builder speed(@Nullable Output<Integer> speed) {
            $.speed = speed;
            return this;
        }

        public Builder speed(Integer speed) {
            return speed(Output.of(speed));
        }

        public ReplicationArgs build() {
            $.action = Objects.requireNonNull($.action, "expected parameter 'action' to be non-null");
            $.registryId = Objects.requireNonNull($.registryId, "expected parameter 'registryId' to be non-null");
            return $;
        }
    }

}
