// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumiverse.harbor;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RegistryArgs extends com.pulumi.resources.ResourceArgs {

    public static final RegistryArgs Empty = new RegistryArgs();

    @Import(name="accessId")
    private @Nullable Output<String> accessId;

    public Optional<Output<String>> accessId() {
        return Optional.ofNullable(this.accessId);
    }

    @Import(name="accessSecret")
    private @Nullable Output<String> accessSecret;

    public Optional<Output<String>> accessSecret() {
        return Optional.ofNullable(this.accessSecret);
    }

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="endpointUrl", required=true)
    private Output<String> endpointUrl;

    public Output<String> endpointUrl() {
        return this.endpointUrl;
    }

    @Import(name="insecure")
    private @Nullable Output<Boolean> insecure;

    public Optional<Output<Boolean>> insecure() {
        return Optional.ofNullable(this.insecure);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="providerName", required=true)
    private Output<String> providerName;

    public Output<String> providerName() {
        return this.providerName;
    }

    private RegistryArgs() {}

    private RegistryArgs(RegistryArgs $) {
        this.accessId = $.accessId;
        this.accessSecret = $.accessSecret;
        this.description = $.description;
        this.endpointUrl = $.endpointUrl;
        this.insecure = $.insecure;
        this.name = $.name;
        this.providerName = $.providerName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RegistryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RegistryArgs $;

        public Builder() {
            $ = new RegistryArgs();
        }

        public Builder(RegistryArgs defaults) {
            $ = new RegistryArgs(Objects.requireNonNull(defaults));
        }

        public Builder accessId(@Nullable Output<String> accessId) {
            $.accessId = accessId;
            return this;
        }

        public Builder accessId(String accessId) {
            return accessId(Output.of(accessId));
        }

        public Builder accessSecret(@Nullable Output<String> accessSecret) {
            $.accessSecret = accessSecret;
            return this;
        }

        public Builder accessSecret(String accessSecret) {
            return accessSecret(Output.of(accessSecret));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder endpointUrl(Output<String> endpointUrl) {
            $.endpointUrl = endpointUrl;
            return this;
        }

        public Builder endpointUrl(String endpointUrl) {
            return endpointUrl(Output.of(endpointUrl));
        }

        public Builder insecure(@Nullable Output<Boolean> insecure) {
            $.insecure = insecure;
            return this;
        }

        public Builder insecure(Boolean insecure) {
            return insecure(Output.of(insecure));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder providerName(Output<String> providerName) {
            $.providerName = providerName;
            return this;
        }

        public Builder providerName(String providerName) {
            return providerName(Output.of(providerName));
        }

        public RegistryArgs build() {
            $.endpointUrl = Objects.requireNonNull($.endpointUrl, "expected parameter 'endpointUrl' to be non-null");
            $.providerName = Objects.requireNonNull($.providerName, "expected parameter 'providerName' to be non-null");
            return $;
        }
    }

}
