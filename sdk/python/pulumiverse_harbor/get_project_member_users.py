# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs

__all__ = [
    'GetProjectMemberUsersResult',
    'AwaitableGetProjectMemberUsersResult',
    'get_project_member_users',
    'get_project_member_users_output',
]

@pulumi.output_type
class GetProjectMemberUsersResult:
    """
    A collection of values returned by getProjectMemberUsers.
    """
    def __init__(__self__, id=None, project_id=None, project_member_users=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if project_id and not isinstance(project_id, str):
            raise TypeError("Expected argument 'project_id' to be a str")
        pulumi.set(__self__, "project_id", project_id)
        if project_member_users and not isinstance(project_member_users, list):
            raise TypeError("Expected argument 'project_member_users' to be a list")
        pulumi.set(__self__, "project_member_users", project_member_users)

    @property
    @pulumi.getter
    def id(self) -> builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="projectId")
    def project_id(self) -> builtins.str:
        """
        The id of the project within harbor.
        """
        return pulumi.get(self, "project_id")

    @property
    @pulumi.getter(name="projectMemberUsers")
    def project_member_users(self) -> Sequence['outputs.GetProjectMemberUsersProjectMemberUserResult']:
        return pulumi.get(self, "project_member_users")


class AwaitableGetProjectMemberUsersResult(GetProjectMemberUsersResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetProjectMemberUsersResult(
            id=self.id,
            project_id=self.project_id,
            project_member_users=self.project_member_users)


def get_project_member_users(project_id: Optional[builtins.str] = None,
                             opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetProjectMemberUsersResult:
    """
    ## Example Usage


    :param builtins.str project_id: The id of the project within harbor.
    """
    __args__ = dict()
    __args__['projectId'] = project_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('harbor:index/getProjectMemberUsers:getProjectMemberUsers', __args__, opts=opts, typ=GetProjectMemberUsersResult).value

    return AwaitableGetProjectMemberUsersResult(
        id=pulumi.get(__ret__, 'id'),
        project_id=pulumi.get(__ret__, 'project_id'),
        project_member_users=pulumi.get(__ret__, 'project_member_users'))
def get_project_member_users_output(project_id: Optional[pulumi.Input[builtins.str]] = None,
                                    opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetProjectMemberUsersResult]:
    """
    ## Example Usage


    :param builtins.str project_id: The id of the project within harbor.
    """
    __args__ = dict()
    __args__['projectId'] = project_id
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('harbor:index/getProjectMemberUsers:getProjectMemberUsers', __args__, opts=opts, typ=GetProjectMemberUsersResult)
    return __ret__.apply(lambda __response__: GetProjectMemberUsersResult(
        id=pulumi.get(__response__, 'id'),
        project_id=pulumi.get(__response__, 'project_id'),
        project_member_users=pulumi.get(__response__, 'project_member_users')))
